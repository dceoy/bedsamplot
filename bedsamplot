#!/usr/bin/env bash
#
# Parallelized Samplot executor for multiple regions in a BED file
#
# Usage:
#   bedsamplot [--cpus INT] [--timeout DURATION] [--margin INT]
#     [--prefix PREFIX] --bed BED --bams BAMS ...
#   bedsamplot --version
#   bedsamplot -h|--help
#
# Options:
#   -h, --help          Print usage
#   --version           Print version
#   --cpus INT          Limit CPUs for multiprocessing
#   --timeout DURATION  Time limit per region such as "30s", "5m", and "1h"
#   --margin INT        Margin lengths for regions [default: 0]
#   --prefix PREFIX     Output prefix [default: bedsamplot]
#   --bed BED           Regions' BED file name
#   --bams BAMS         Space-delimited list of BAM/CRAM file names
#   ...                 Additional arguments to be passed to `samplot plot`
#                       (-c, -s, -e, and -o are unavailable
#                        because they are used by bedsamplot.)

set -euo pipefail

if [[ ${#} -ge 1 ]]; then
  break_loop=0
  for a in "${@}"; do
    if [[ "${a}" = '--debug' ]]; then
      break_loop=1
    elif [[ break_loop -eq 1 ]]; then
      [[ "${a}" = 'DEBUG' ]] && set -x
      break
    fi
  done
fi

COMMAND_PATH=$(realpath "${0}")
COMMAND_NAME=$(basename "${COMMAND_PATH}")
COMMAND_VERSION='v0.1.1'

case "${OSTYPE}" in
  darwin* )
    CPUS=$(sysctl -n hw.ncpu)
    ;;
  linux* )
    CPUS=$(grep -ce '^processor\s\+:' /proc/cpuinfo)
    ;;
  * )
    CPUS=1
    :
    ;;
esac
MAIN_ARGS=()
PREFIX='bedsamplot'
SAMPLOT='samplot'
MARGIN=0

function print_version {
  echo "${COMMAND_NAME}: ${COMMAND_VERSION}"
}

function print_usage {
  sed -ne '1,2d; /^#/!q; s/^#$/# /; s/^# //p;' "${COMMAND_PATH}"
}

function abort {
  {
    if [[ ${#} -eq 0 ]]; then
      cat -
    else
      COMMAND_NAME=$(basename "${COMMAND_PATH}")
      echo "${COMMAND_NAME}: ${*}"
    fi
  } >&2
  exit 1
}


while [[ ${#} -ge 1 ]]; do
  case "${1}" in
    '--cpus' )
      CPUS="${2}" && shift 2
      ;;
    '--timeout' )
      SAMPLOT="timeout ${2} samplot" && shift 2
      ;;
    '--margin' )
      MARGIN="${2}" && shift 2
      ;;
    '--prefix' )
      PREFIX="${2}" && shift 2
      ;;
    '--bed' )
      BED_PATH="${2}" && shift 2
      ;;
    '--version' )
      print_version && exit 0
      ;;
    '-h' | '--help' )
      print_usage && exit 0
      ;;
    '-c' | '--chrom' | '-s' | '--start' | '-e' | '--end' | '-o' | '--output_file' )
      abort "unavailable option: ${1}"
      ;;
    * )
      MAIN_ARGS+=("${1}") && shift 1
      ;;
  esac
done


echo '>>  Print versions'
samplot --version
python --version
print_version

echo '>>  Run Samplot'
python -c "\
from fileinput import input; \
from re import sub; \
[(lambda a, b, c, d:
  print(f'${SAMPLOT} plot -o ${PREFIX}.{a}_{b}_{c}_{d}.pdf -c {a} -s {b} -e {c} ${MAIN_ARGS[*]}'))( \
  *(lambda t: \
    (t[0], max(1, int(t[1]) + 1 - ${MARGIN}), int(t[2]) + ${MARGIN}, sub(\"[:;,]\", \"_\",  t[3]) if len(t) > 3 else \"\")) \
   )(s.split(maxsplit=4))) \
 for s in input()];" "${BED_PATH}" \
  | xargs -P "${CPUS}" -I {} bash -c "{} && echo 'SUCCEEDED <-  {}' || echo 'FAILED    <-  {}'"
